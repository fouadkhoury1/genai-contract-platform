version: '3.9'

services:
  mongodb:
    image: mongo:7.0
    container_name: genai-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    env_file:
      - .env
    networks:
      - genai-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7.2-alpine
    container_name: genai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - genai-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: genai-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/home/app/web
      - backend_logs:/home/app/web/logs
    env_file:
      - .env
    environment:
      - MONGO_URI=mongodb://mongodb:27017
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - genai-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: genai-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - genai-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: genai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - genai-network
    restart: unless-stopped

networks:
  genai-network:
    driver: bridge

volumes:
  mongo_data:
  redis_data:
  backend_logs: